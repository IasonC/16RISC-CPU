$date
	Thu Aug 18 19:59:45 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module reg_file_tb $end
$var wire 16 ! data_out2 [15:0] $end
$var wire 16 " data_out1 [15:0] $end
$var reg 4 # RA1 [3:0] $end
$var reg 4 $ RA2 [3:0] $end
$var reg 4 % WA [3:0] $end
$var reg 1 & clk $end
$var reg 16 ' data_in [15:0] $end
$var reg 1 ( reset $end
$var reg 1 ) write_enable $end
$scope module dut $end
$var wire 4 * RA1 [3:0] $end
$var wire 4 + RA2 [3:0] $end
$var wire 4 , WA [3:0] $end
$var wire 1 & clk $end
$var wire 16 - data_in [15:0] $end
$var wire 16 . data_out1 [15:0] $end
$var wire 16 / data_out2 [15:0] $end
$var wire 1 ( reset $end
$var wire 1 ) write_enable $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
b1000101000110111 -
b1000 ,
bx +
bx *
0)
x(
b1000101000110111 '
1&
b1000 %
bx $
bx #
bx "
bx !
$end
#10000
b1111 +
b1111 $
b1000 *
b1000 #
0&
#20000
b1000101000110111 "
b1000101000110111 .
1)
1&
#30000
b1111 ,
b1111 %
b1111010010000110 -
b1111010010000110 '
0&
#40000
bx "
b1 +
b1 $
bx .
b0 *
b0 #
1&
#50000
b1111010010000110 "
b101 +
b101 $
b1111010010000110 .
b1111 *
b1111 #
0)
b100000100 -
b100000100 '
0&
#60000
b1000000011010010 "
b1000000011010010 .
b1000 *
b1000 #
b1000 ,
b1000 %
b1000000011010010 -
b1000000011010010 '
1)
1&
#70000
b1111010010000110 !
b1111010010000110 /
b1111 +
b1111 $
b1111 ,
b1111 %
0&
#80000
b1000000011010010 !
b1000000011010010 /
0(
1&
#90000
1(
0&
#100000
1&
